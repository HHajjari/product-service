name: Build and Deploy Spring Boot App to ACR

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write  # Required for Workload Identity Federation

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Azure using Workload Identity
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Log in to Azure Container Registry (ACR)
      - name: Log in to ACR
        run: |
          az acr login --name ${{ vars.ACR_NAME }}

      # Set up Java
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Print ACR Name
        run: |
          echo "ACR Name: ${{ vars.ACR_NAME }}.azurecr.io"

      - name: Log in to ACR using Docker
        run: |
          TOKEN=$(az acr login --name ${{ vars.ACR_NAME }} --expose-token --output tsv --query accessToken)
          echo "$TOKEN" | docker login ${{ vars.ACR_NAME }}.azurecr.io -u 00000000-0000-0000-0000-000000000000 --password-stdin
      

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          mvn -X -DskipTests -Ddocker.registry=${{ vars.ACR_NAME }}.azurecr.io clean package spring-boot:build-image

      - name: Verify All Repositories in ACR
        run: |
          echo "Listing all repositories in ACR..."
          az acr repository list --name ${{ vars.ACR_NAME }} --output table