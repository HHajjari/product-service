name: Infra Deployment

on:
  workflow_dispatch:  # Allows manual trigger

permissions:
  id-token: write   # REQUIRED for OIDC authentication
  contents: read    # Allows access to the repository content

jobs:
  infra:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: latest

      - name: Azure Login via OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Init Terraform
        run: terraform init
        working-directory: infra

      - name: Debug Variable Values
        run: |
          echo "Subscription ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          echo "Resource Group: ${{ vars.AZURE_RESOURCE_GROUP }}"
          echo "Location: ${{ vars.AZURE_LOCATION }}"
          echo "ACR Name: ${{ vars.AZURE_ACR_NAME }}"
          echo "ACI Name: ${{ vars.AZURE_ACI_NAME }}"
          echo "GitHub OIDC Principal ID: ${{ secrets.AZURE_OIDC_PRINCIPAL_ID }}"

      - name: Apply Terraform (Create Infrastructure with Placeholder Image)
        run: |
          terraform apply -auto-approve \
            -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -var "resource_group_name=${{ vars.AZURE_RESOURCE_GROUP }}" \
            -var "location=${{ vars.AZURE_LOCATION }}" \
            -var "acr_name=${{ vars.AZURE_ACR_NAME }}" \
            -var "github_oidc_principal_id=${{ secrets.AZURE_OIDC_PRINCIPAL_ID }}" \
            -var "aci_name=${{ vars.AZURE_ACI_NAME }}" \
            -var "image_name=busybox"  # ✅ Creates ACI with a placeholder image
        working-directory: infra

  deploy-app:
    needs: infra  # ✅ Runs after infrastructure is deployed
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Azure Login via OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        run: |
          az acr login --name ${{ vars.AZURE_ACR_NAME }}

      - name: Set up pack CLI
        uses: buildpacks/github-actions/setup-pack@v5.8.8

      - name: Build and Push Image with Buildpacks
        run: |
          pack build ${{ vars.AZURE_ACR_NAME }}.azurecr.io/spring-boot-app:latest \
            --builder paketobuildpacks/builder:full \
            --publish

      - name: Get ACR Credentials
        run: |
          echo "ACR_USERNAME=$(az acr credential show --name ${{ vars.AZURE_ACR_NAME }} --query "username" --output tsv)" >> $GITHUB_ENV
          echo "ACR_PASSWORD=$(az acr credential show --name ${{ vars.AZURE_ACR_NAME }} --query "passwords[0].value" --output tsv)" >> $GITHUB_ENV

      - name: Update Azure Container Instance (ACI) to Use Latest Image
        run: |
          az container update --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
            --name ${{ vars.AZURE_ACI_NAME }} \
            --image ${{ vars.AZURE_ACR_NAME }}.azurecr.io/spring-boot-app:latest
